name: compat-build

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  pin-pumpfun:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout your fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Prime cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: v1-rust-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Prepare git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Fetch pumpfun-rs commits (latest 25)
        id: list
        run: |
          rm -rf pumpfun-rs
          git clone https://github.com/vladmeer/pumpfun-rs.git pumpfun-rs
          cd pumpfun-rs
          git log --pretty=format:%H -n 25 > ../.pumpfun_shas
          echo "count=$(wc -l < ../.pumpfun_shas)" >> $GITHUB_OUTPUT

      - name: Try builds until one passes
        id: try
        run: |
          set -euo pipefail
          PASS_SHA=""
          while read -r SHA; do
            echo "üîé Trying pumpfun-rs @ $SHA"
            rm -rf pumpfun-rs
            git clone https://github.com/vladmeer/pumpfun-rs.git pumpfun-rs >/dev/null 2>&1
            (cd pumpfun-rs && git checkout -q "$SHA")
            cargo update
            if cargo build -p back -j 2; then
              PASS_SHA="$SHA"
              echo "‚úÖ PASS at $SHA"
              break
            else
              echo "‚ùå FAIL at $SHA"
            fi
          done < .pumpfun_shas

          if [ -z "$PASS_SHA" ]; then
            echo "No passing commit found in last $(cat .pumpfun_shas | wc -l) commits."
            exit 1
          fi

          echo "pass_sha=$PASS_SHA" >> $GITHUB_OUTPUT

      - name: Pin pumpfun-rs to passing SHA and commit
        run: |
          SHA="${{ steps.try.outputs.pass_sha }}"
          echo "üìå Pinning pumpfun-rs to $SHA"
          ( cd pumpfun-rs && git checkout -q "$SHA" )
          git add pumpfun-rs
          git commit -m "ci: pin pumpfun-rs to ${SHA::7} (auto-compat)" || true
          git push || true

      - name: Final verify build (backend only)
        run: cargo build -p back -j 2

      - name: Success summary
        run: echo "‚úÖ Compatible pumpfun-rs: ${{ steps.try.outputs.pass_sha }}"
